import{_ as c,a as d,h as u,K as g,J as f,r as i,c as y,o as b}from"./index-BCVPFfbO.js";const m={name:"LazyBackground",props:{src:{type:String,required:!0},placeholder:{type:String,default:"/images/loading-placeholder.svg"},size:{type:String,default:"cover"},position:{type:String,default:"center"},repeat:{type:String,default:"no-repeat"},threshold:{type:Number,default:.1},rootMargin:{type:String,default:"0px"},priority:{type:Boolean,default:!1}},setup(e){const r=i(null),a=i(!1),o=y(()=>a.value?{backgroundImage:`url(${e.src})`,backgroundSize:e.size,backgroundPosition:e.position,backgroundRepeat:e.repeat}:{backgroundImage:e.placeholder?`url(${e.placeholder})`:"none",backgroundSize:e.size,backgroundPosition:e.position,backgroundRepeat:e.repeat});b(()=>{if(e.priority){n();return}if("IntersectionObserver"in window){const t=new IntersectionObserver(s=>{s.forEach(l=>{l.isIntersecting&&(n(),t.unobserve(r.value))})},{threshold:e.threshold,rootMargin:e.rootMargin});t.observe(r.value)}else n()});const n=()=>{const t=new Image;t.onload=()=>{a.value=!0},t.src=e.src};return{lazyBgRef:r,isLoaded:a,bgStyle:o}}};function h(e,r,a,o,n,t){return u(),d("div",f({ref:"lazyBgRef",class:[["lazy-background",{loaded:o.isLoaded}],"transition-opacity duration-500"],style:o.bgStyle},e.$attrs),[g(e.$slots,"default")],16)}const p=c(m,[["render",h]]);export{p as L};
